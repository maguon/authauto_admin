{
  "swagger": "2.0",
  "info": {
    "description": "This is a api docs for `authauto`.  ",
    "version": "1.0.0",
    "title": "AuthAuto API Docs",
    "termsOfService": "http://myxxjs.com",
    "contact": {
      "email": "info@myxxjs.com"
    },
    "license": {
      "name": "Github.com",
      "url": "https://github.com/maguon/authauto_admin/blob/master/LICENSE"
    }
  },
  "host": "localhost:8081",
  "basePath": "/api",
  "tags": [
    {
      "name": "admin",
      "description": "Admin of authauto api "
    },
    {
      "name": "image",
      "description": "authauto image api"
    },
    {
      "name": "feedback",
      "description": "authauto user feedback"
    },
    {
      "name": "brand",
      "description": "authauto brand info"
    },
    {
      "name": "auto",
      "description": "authauto auto info"
    },
    {
      "name": "procure",
      "description": "authauto procure info"
    },
    {
      "name": "open",
      "description": "authauto open info"
    },
    {
      "name": "offer",
      "description": "authauto  supplier offer info"
    },
    {
      "name": "supplier",
      "description": "authauto supplier info"
    },
    {
      "name": "message",
      "description": "authauto message info"
    },
    {
      "name": "user",
      "description": "authauto user info"
    }
  ],
  "schemes": [
    "http"
  ],
  "paths": {
    "/admin/do/login": {
      "post": {
        "tags": [
          "admin"
        ],
        "summary": "Admin user do login",
        "description": "",
        "operationId": "admin login",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Admin base info ",
            "required": true,
            "schema": {
              "$ref": "#/definitions/admin"
            }
          }
        ],
        "responses": {
          "405": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/admin/{adminId}/token/{token}": {
      "get": {
        "tags": [
          "admin"
        ],
        "summary": "A new token for admin",
        "description": "Get a new token for admin by a old",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "adminId",
            "in": "path",
            "description": "admin id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "token",
            "in": "path",
            "description": "admin old token",
            "required": true,
            "type": "string"

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/admin"
              }
            }
          },
          "400": {
            "description": "Invalid token value"
          }
        }
      }
    },
    "/admin/{adminId}": {
      "get": {
        "tags": [
          "admin"
        ],
        "summary": "query admin user info",
        "description": "Get admin user info",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "adminId",
            "in": "path",
            "description": "admin id",
            "required": true,
            "type": "integer"

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/admin"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid admin id"
          }
        }
      },
      "put": {
        "tags": [
          "admin"
        ],
        "summary": "update admin user info",
        "description": "update admin user info",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "adminId",
            "in": "path",
            "description": "admin id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "admin",
            "in": "body",
            "description": "admin base info:name,phone and remark is needed .",
            "required": true,
            "schema": {
              "$ref": "#/definitions/admin"
            }

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/admin"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid admin id"
          }
        }
      }
    },
    "/admin/{adminId}/password": {
      "put": {
        "tags": [
          "admin"
        ],
        "summary": "update admin user password",
        "description": "update admin user password",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "adminId",
            "in": "path",
            "description": "admin id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "password",
            "in": "body",
            "description": "admin base info:origin and new password is needed .",
            "required": true,
            "schema": {
              "$ref": "#/definitions/password"
            }

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/password"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid admin id"
          }
        }
      }
    },
    "/image/{imageId}": {
      "get": {
        "tags": [
          "image"
        ],
        "summary": "get a image file",
        "description": "Get a image info ,try it out by navigator",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "imageId",
            "in": "path",
            "description": "image id",
            "required": true,
            "type": "string"

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "Invalid image id value"
          }
        }
      }
    },
    "/admin/{adminId}/image": {
      "post": {
        "tags": [
          "image"
        ],
        "summary": "upload a image",
        "description": "Admin user upload a image ",
        "operationId": "upload image",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "adminId",
            "in": "path",
            "description": "ID of admin user",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Additional data to pass to server",
            "required": true,
            "schema": {
              "$ref": "#/definitions/imageMetaData"
            }
          },
          {
            "name": "image",
            "in": "formData",
            "description": "file to upload",
            "required": true,
            "type": "file"
          }
        ],
        "responses": {
          "405": {
            "description": "Invalid input"
          }
        },
        "security": [
          {
            "petstore_auth": [
              "write:pets",
              "read:pets"
            ]
          }
        ]
      }
    },
    "/feedback": {
      "post": {
        "tags": [
          "feedback"
        ],
        "summary": "create a feedback ",
        "description": "",
        "operationId": "userFeedback",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "feedback info ",
            "required": true,
            "schema": {
              "$ref": "#/definitions/feedback"
            }
          }
        ],
        "responses": {
          "405": {
            "description": "Invalid input"
          }
        },
        "security": [
          {
            "petstore_auth": [
              "write:pets",
              "read:pets"
            ]
          }
        ]
      }
    },
    "/admin/{adminId}/feedback": {
      "get": {
        "tags": [
          "feedback"
        ],
        "summary": "query feedback info",
        "description": "",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "adminId",
            "in": "path",
            "description": "admin id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "feedbackId",
            "in": "query",
            "description": "feedbackId",
            "required": false,
            "type": "integer"

          },
          {
            "name": "status",
            "in": "query",
            "description": "status",
            "required": false,
            "type": "integer"

          },
          {
            "name": "type",
            "in": "query",
            "description": "type",
            "required": false,
            "type": "integer"

          },
          {
            "name": "start",
            "in": "query",
            "description": "start  for pagination",
            "required": false,
            "type": "integer"

          },
          {
            "name": "size",
            "in": "query",
            "description": " offset size for pagination",
            "required": false,
            "type": "integer"

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/feedback"
              }
            }
          },
          "400": {
            "description": "Invalid token value"
          }
        }
      }
    },
    "/api/admin/{adminId}/feedback/{feedbackId}/status/{status}": {
      "put": {
        "tags": [
          "feedback"
        ],
        "summary": "update feedback status",
        "description": "",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "adminId",
            "in": "path",
            "description": "admin id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "feedbackId",
            "in": "path",
            "description": "feedbackId",
            "required": true,
            "type": "integer"

          },
          {
            "name": "status",
            "in": "path",
            "description": "status",
            "required": true,
            "type": "integer"

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/ApiResponse"
              }
            }
          },
          "400": {
            "description": "Invalid token value"
          }
        }
      }
    },
    "/admin/{adminId}/brand": {
      "post": {
        "tags": [
          "brand"
        ],
        "summary": "Admin create a brand",
        "description": "",
        "operationId": "createBrand",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "brand  info ",
            "required": true,
            "schema": {
              "$ref": "#/definitions/brand"
            }
          }
        ],
        "responses": {
          "405": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/admin/{adminId}/producer": {
      "post": {
        "tags": [
          "brand"
        ],
        "summary": "Admin create a producer",
        "description": "",
        "operationId": "createProducer",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "producer  info ",
            "required": true,
            "schema": {
              "$ref": "#/definitions/producer"
            }
          }
        ],
        "responses": {
          "405": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/admin/{adminId}/brand/{brandId}": {
      "put": {
        "tags": [
          "brand"
        ],
        "summary": "update brand info",
        "description": "update brand info",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "adminId",
            "in": "path",
            "description": "admin id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "brand",
            "in": "body",
            "description": "brand base info",
            "required": true,
            "schema": {
              "$ref": "#/definitions/brand"
            }

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/ApiResponse"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid admin id"
          }
        }
      }
    },
    "/admin/{adminId}/producer/{producerId}": {
      "put": {
        "tags": [
          "brand"
        ],
        "summary": "update producer info",
        "description": "update producer info",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "adminId",
            "in": "path",
            "description": "admin id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "producer",
            "in": "body",
            "description": "producer base info",
            "required": true,
            "schema": {
              "$ref": "#/definitions/producer"
            }

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/ApiResponse"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid admin id"
          }
        }
      }
    },
    "/brand": {
      "get": {
        "tags": [
          "brand"
        ],
        "summary": "query brand info",
        "description": "Get brand info",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "brandId",
            "in": "query",
            "description": "brandId",
            "required": false,
            "type": "integer"

          },
          {
            "name": "status",
            "in": "query",
            "description": "status",
            "required": false,
            "type": "integer"

          },
          {
            "name": "start",
            "in": "query",
            "description": "start  for pagination",
            "required": false,
            "type": "integer"

          },
          {
            "name": "size",
            "in": "query",
            "description": " offset size for pagination",
            "required": false,
            "type": "integer"

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/brand"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid parameter"
          }
        }
      }
    },
    "/producer": {
      "get": {
        "tags": [
          "brand"
        ],
        "summary": "query producer info",
        "description": "Get producer info",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "producerId",
            "in": "query",
            "description": "brandId",
            "required": false,
            "type": "integer"

          },
          {
            "name": "start",
            "in": "query",
            "description": "start  for pagination",
            "required": false,
            "type": "integer"

          },
          {
            "name": "size",
            "in": "query",
            "description": " offset size for pagination",
            "required": false,
            "type": "integer"

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/producer"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid parameter"
          }
        }
      }
    },
    "/admin/{adminId}/brandCount": {
      "get": {
        "tags": [
          "brand"
        ],
        "summary": "query brand count",
        "description": "Get brand count",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "adminId",
            "in": "path",
            "description": "admin id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "status",
            "in": "query",
            "description": "status",
            "required": false,
            "type": "integer"

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/brand"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid parameter"
          }
        }
      }
    },
    "/auto": {
      "get": {
        "tags": [
          "auto"
        ],
        "summary": "query auto info",
        "description": "Get auto info",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "autoId",
            "in": "query",
            "description": "autoId",
            "required": false,
            "type": "integer"

          },
          {
            "name": "brandId",
            "in": "query",
            "description": "brandId",
            "required": false,
            "type": "integer"

          },
          {
            "name": "status",
            "in": "query",
            "description": "status",
            "required": false,
            "type": "integer"

          },
          {
            "name": "start",
            "in": "query",
            "description": "start  for pagination",
            "required": false,
            "type": "integer"

          },
          {
            "name": "size",
            "in": "query",
            "description": " offset size for pagination",
            "required": false,
            "type": "integer"

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/auto"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid parameter"
          }
        }
      }
    },
    "/admin/{adminId}/autoCount": {
      "get": {
        "tags": [
          "auto"
        ],
        "summary": "query auto count",
        "description": "Get auto count",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "adminId",
            "in": "path",
            "description": "adminId",
            "required": false,
            "type": "integer"

          },
          {
            "name": "status",
            "in": "query",
            "description": "status",
            "required": false,
            "type": "integer"

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/auto"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid parameter"
          }
        }
      }
    },
    "/auto/{autoId}/extra": {
      "get": {
        "tags": [
          "auto"
        ],
        "summary": "query auto extra info",
        "description": "Get auto extra info",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "autoId",
            "in": "path",
            "description": "autoId",
            "required": false,
            "type": "integer"

          },
          {
            "name": "type",
            "in": "query",
            "description": "type : automatic or manual",
            "required": false,
            "type": "integer"

          },
          {
            "name": "year",
            "in": "query",
            "description": "auto extra info :year",
            "required": false,
            "type": "integer"

          },
          {
            "name": "status",
            "in": "query",
            "description": "status",
            "required": false,
            "type": "integer"

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/autoExtra"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid parameter"
          }
        }
      }
    },
    "/admin/{adminId}/auto": {
      "post": {
        "tags": [
          "auto"
        ],
        "summary": "Admin create a auto",
        "description": "",
        "operationId": "createAuto",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "adminId",
            "in": "path",
            "description": "admin id",
            "required": true,
            "type": "integer"

          },
          {
            "in": "body",
            "name": "body",
            "description": "auto base  info ",
            "required": true,
            "schema": {
              "$ref": "#/definitions/auto"
            }
          }
        ],
        "responses": {
          "405": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/admin/{adminId}/auto/{autoId}/extra": {
      "post": {
        "tags": [
          "auto"
        ],
        "summary": "Admin create a auto",
        "description": "",
        "operationId": "createAuto",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "adminId",
            "in": "path",
            "description": "admin id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "autoId",
            "in": "path",
            "description": "auto id",
            "required": true,
            "type": "integer"

          },
          {
            "in": "body",
            "name": "body",
            "description": "auto extra  info ",
            "required": true,
            "schema": {
              "$ref": "#/definitions/autoExtra"
            }
          }
        ],
        "responses": {
          "405": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/admin/{adminId}/auto/{autoId}": {
      "put": {
        "tags": [
          "auto"
        ],
        "summary": "update auto info",
        "description": "update auto info",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "adminId",
            "in": "path",
            "description": "admin id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "autoId",
            "in": "path",
            "description": "auto id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "auto",
            "in": "body",
            "description": "auto base info",
            "required": true,
            "schema": {
              "$ref": "#/definitions/auto"
            }

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/admin"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid admin id"
          }
        }
      },
      "delete": {
        "tags": [
          "auto"
        ],
        "summary": "Deletes a auto",
        "description": "",
        "operationId": "deleteAuto",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "adminId",
            "in": "path",
            "description": "admin id",
            "required": true,
            "type": "integer"
          },
          {
            "name": "autoId",
            "in": "path",
            "description": "auto id to delete",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "auto not found"
          }
        }
      }
    },
    "/admin/{adminId}/extra/{extraId}": {
      "put": {
        "tags": [
          "auto"
        ],
        "summary": "update auto info",
        "description": "update auto info",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "adminId",
            "in": "path",
            "description": "admin id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "extraId",
            "in": "path",
            "description": "extra id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "autoExtra",
            "in": "body",
            "description": "auto extra info",
            "required": true,
            "schema": {
              "$ref": "#/definitions/autoExtra"
            }

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/admin"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid admin id"
          }
        }
      }
    },
    "/procure": {
      "get": {
        "tags": [
          "procure"
        ],
        "summary": "query procure info",
        "description": "Get procure info",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "procureId",
            "in": "query",
            "description": "procureId",
            "required": false,
            "type": "integer"

          },
          {
            "name": "procureIds",
            "in": "query",
            "description": "procureIds",
            "required": false,
            "type": "string"

          },
          {
            "name": "brandId",
            "in": "query",
            "description": "brandId",
            "required": false,
            "type": "integer"

          },
          {
            "name": "autoId",
            "in": "query",
            "description": "autoId",
            "required": false,
            "type": "integer"

          },
          {
            "name": "status",
            "in": "query",
            "description": "status",
            "required": false,
            "type": "integer"

          },
          {
            "name": "start",
            "in": "query",
            "description": "start  for pagination",
            "required": false,
            "type": "integer"

          },
          {
            "name": "size",
            "in": "query",
            "description": " offset size for pagination",
            "required": false,
            "type": "integer"

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/procure"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid parameter"
          }
        }
      }
    },
    "/admin/{adminId}/procure": {
      "post": {
        "tags": [
          "procure"
        ],
        "summary": "Admin create a procure",
        "description": "",
        "operationId": "createProcure",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "adminId",
            "in": "path",
            "description": "admin id",
            "required": true,
            "type": "integer"

          },
          {
            "in": "body",
            "name": "body",
            "description": "procure  info ",
            "required": true,
            "schema": {
              "$ref": "#/definitions/procure"
            }
          }
        ],
        "responses": {
          "405": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/admin/{adminId}/procure/{procureId}": {
      "put": {
        "tags": [
          "procure"
        ],
        "summary": "update procure info",
        "description": "update procure info",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "adminId",
            "in": "path",
            "description": "admin id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "procureId",
            "in": "path",
            "description": "procure id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "procure",
            "in": "body",
            "description": "procure info",
            "required": true,
            "schema": {
              "$ref": "#/definitions/procure"
            }

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/ApiResponse"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid admin id"
          }
        }
      }
    },
    "/admin/{adminId}/procure/{procureId}/status/{status}": {
      "put": {
        "tags": [
          "procure"
        ],
        "summary": "update procure info",
        "description": "update procure info",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "adminId",
            "in": "path",
            "description": "admin id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "procureId",
            "in": "path",
            "description": "procure id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "status",
            "in": "path",
            "description": "procure status",
            "required": true,
            "type": "integer"

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/ApiResponse"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid admin id"
          }
        }
      }
    },
    "/user/{userId}/offer": {
      "get": {
        "tags": [
          "offer"
        ],
        "summary": "query  user offer",
        "description": "Get  user offer",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "admin id",
            "required": true,
            "type": "integer"

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/offer"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid user id"
          }
        }
      },
      "post": {
        "tags": [
          "offer"
        ],
        "summary": "create a user offer",
        "description": "create offer",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "offer",
            "in": "body",
            "description": "offer info",
            "required": true,
            "schema": {
              "$ref": "#/definitions/offer"
            }

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/ApiResponse"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid user id"
          }
        }
      }
    },
    "/user/{userId}/offer/{offerId}": {
      "put": {
        "tags": [
          "offer"
        ],
        "summary": "update offer info",
        "description": "update offer info",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "offerId",
            "in": "path",
            "description": "offer id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "offer",
            "in": "body",
            "description": "offer info",
            "required": true,
            "schema": {
              "$ref": "#/definitions/offer"
            }

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/ApiResponse"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid user id"
          }
        }
      }
    },
    "/admin/{adminId}/offer": {
      "get": {
        "tags": [
          "offer"
        ],
        "summary": "query  user offer",
        "description": "Get  user offer",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "adminId",
            "in": "path",
            "description": "admin id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "supplierId",
            "in": "query",
            "description": "supplier id",
            "required": false,
            "type": "integer"

          },
          {
            "name": "procureId",
            "in": "query",
            "description": "procure id",
            "required": false,
            "type": "integer"

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/offer"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid user id"
          }
        }
      }
    },
    "/admin/{adminId}/offer/{offerId}/status": {
      "put": {
        "tags": [
          "offer"
        ],
        "summary": "update offer status and info",
        "description": "update offer status and info",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "adminId",
            "in": "path",
            "description": "admin id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "offerId",
            "in": "path",
            "description": "offer id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "procureId",
            "in": "query",
            "description": "offer procure id",
            "required": false,
            "type": "integer"

          },
          {
            "name": "supplierId",
            "in": "query",
            "description": "supplier id",
            "required": false,
            "type": "integer"

          },
          {
            "name": "userId",
            "in": "query",
            "description": "user id",
            "required": false,
            "type": "integer"

          },
          {
            "name": "offerStatus",
            "in": "body",
            "description": "offer status info",
            "required": true,
            "schema": {
              "$ref": "#/definitions/offerStatus"
            }

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/ApiResponse"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid user id"
          }
        }
      }
    },
    "/tax": {
      "get": {
        "tags": [
          "open"
        ],
        "summary": "query  unite state tax rate",
        "description": "query tax",
        "produces": [
          "application/json"
        ],
        "parameters": [

          {
            "name": "zipcode",
            "in": "query",
            "description": " postal:90001",
            "required": true,
            "type": "integer"

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/tax"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid postal id"
          }
        }
      }
    },
    "/admin/{adminId}/supplier": {
      "get": {
        "tags": [
          "supplier"
        ],
        "summary": "query  supplier list",
        "description": "query supplier",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "adminId",
            "in": "path",
            "description": "adminId",
            "required": true,
            "type": "integer"

          },
          {
            "name": "supplierId",
            "in": "query",
            "description": "supplierId",
            "required": false,
            "type": "integer"

          },
          {
            "name": "email",
            "in": "query",
            "description": "supplier email",
            "required": false,
            "type": "string"

          },
          {
            "name": "phone",
            "in": "query",
            "description": "supplier phone",
            "required": false,
            "type": "string"

          },
          {
            "name": "state",
            "in": "query",
            "description": "supplier state",
            "required": false,
            "type": "string"

          },
          {
            "name": "city",
            "in": "query",
            "description": "supplier city",
            "required": false,
            "type": "string"

          },
          {
            "name": "bizName",
            "in": "query",
            "description": "supplier biz name",
            "required": false,
            "type": "string"

          },
          {
            "name": "userId",
            "in": "query",
            "description": "supplier user id",
            "required": false,
            "type": "integer"

          },
          {
            "name": "zipcode",
            "in": "query",
            "description": " postal:90001",
            "required": false,
            "type": "integer"

          },
          {
            "name": "status",
            "in": "query",
            "description": "supplier status",
            "required": false,
            "type": "integer"

          },
          {
            "name": "start",
            "in": "query",
            "description": "supplier list start pos",
            "required": false,
            "type": "integer"

          },
          {
            "name": "size",
            "in": "query",
            "description": "supplier list size for pagination",
            "required": false,
            "type": "integer"

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/supplier"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid postal id"
          }
        }
      },
      "post": {
        "tags": [
          "supplier"
        ],
        "summary": "admin create supplier",
        "description": "admin create supplier",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "adminId",
            "in": "path",
            "description": "admin id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "supplier",
            "in": "body",
            "description": "supplier info",
            "required": true,
            "schema": {
              "$ref": "#/definitions/supplier"
            }

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/ApiResponse"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid user id"
          }
        }
      }
    },
    "/admin/{adminId}/supplierCount": {
      "get": {
        "tags": [
          "supplier"
        ],
        "summary": "query supplier total count",
        "description": "query supplier count",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "adminId",
            "in": "path",
            "description": "adminId",
            "required": true,
            "type": "integer"

          },
          {
            "name": "status",
            "in": "query",
            "description": "supplier status",
            "required": false,
            "type": "integer"

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "integer"
            }
          },
          "400": {
            "description": "Invalid token value or invalid admin id"
          }
        }
      }
    },
    "/user/{userId}/supplier": {
      "get": {
        "tags": [
          "supplier"
        ],
        "summary": "query user supplier info",
        "description": "query user supplier info",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "userId",
            "required": true,
            "type": "integer"

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/supplier"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid postal id"
          }
        }
      }
    },
    "/admin/{adminId}/supplier/{supplierId}": {
      "put": {
        "tags": [
          "supplier"
        ],
        "summary": "update supplier info",
        "description": "update supplier info",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "adminId",
            "in": "path",
            "description": "admin id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "supplier",
            "in": "path",
            "description": "supplier id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "supplier",
            "in": "body",
            "description": "supplier info",
            "required": true,
            "schema": {
              "$ref": "#/definitions/supplier"
            }

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/ApiResponse"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid user id"
          }
        }
      }
    },
    "/admin/{adminId}/supplier/{supplierId}/status/{status}": {
      "put": {
        "tags": [
          "supplier"
        ],
        "summary": "update supplier status",
        "description": "update supplier status",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "adminId",
            "in": "path",
            "description": "admin id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "supplierId",
            "in": "path",
            "description": "supplier id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "status",
            "in": "path",
            "description": "supplier status",
            "required": true,
            "type": "integer"

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/ApiResponse"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid user id"
          }
        }
      }
    },
    "/admin/{adminId}/user": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "query  user list",
        "description": "query user",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "adminId",
            "in": "path",
            "description": "adminId",
            "required": true,
            "type": "integer"

          },
          {
            "name": "userId",
            "in": "query",
            "description": "user id",
            "required": false,
            "type": "integer"

          },
          {
            "name": "email",
            "in": "query",
            "description": "user email",
            "required": false,
            "type": "string"

          },
          {
            "name": "status",
            "in": "query",
            "description": "user status",
            "required": false,
            "type": "integer"

          },
          {
            "name": "type",
            "in": "query",
            "description": "user type",
            "required": false,
            "type": "integer"

          },
          {
            "name": "start",
            "in": "query",
            "description": " list start pos",
            "required": false,
            "type": "integer"

          },
          {
            "name": "size",
            "in": "query",
            "description": "list size for pagination",
            "required": false,
            "type": "integer"

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/user"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid postal id"
          }
        }
      }
    },
    "/admin/{adminId}/userCount": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "query user total count",
        "description": "query user count",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "adminId",
            "in": "path",
            "description": "adminId",
            "required": true,
            "type": "integer"

          },
          {
            "name": "status",
            "in": "query",
            "description": "user status",
            "required": false,
            "type": "integer"

          },
          {
            "name": "type",
            "in": "query",
            "description": "user type",
            "required": false,
            "type": "integer"

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "integer"
            }
          },
          "400": {
            "description": "Invalid token value or invalid admin id"
          }
        }
      }
    },
    "/user/{userId}": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "query user profile",
        "description": "query user info",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "userId",
            "required": true,
            "type": "integer"

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/user"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid user id"
          }
        }
      }
    },
    "/invite/{inviteCode}": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "query inviteInfo",
        "description": "query invite info",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "inviteCode",
            "in": "path",
            "description": "invite code 32bit",
            "required": true,
            "type": "integer"

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/invite"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid user id"
          }
        },
        "deprecated": true
      }
    },
    "/user": {
      "post": {
        "tags": [
          "user"
        ],
        "summary": "user register",
        "description": "user sign up",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "user",
            "in": "body",
            "description": "user info",
            "required": true,
            "schema": {
              "$ref": "#/definitions/user"
            }

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/ApiResponse"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid user id"
          }
        }
      }
    },
    "/userLogin": {
      "post": {
        "tags": [
          "user"
        ],
        "summary": "user login",
        "description": "user sign in",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "user",
            "in": "body",
            "description": "user info",
            "required": true,
            "schema": {
              "$ref": "#/definitions/user"
            }

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/ApiResponse"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid user id"
          }
        }
      }
    },
    "/invite/{inviteCdoe}/supplier": {
      "post": {
        "tags": [
          "user"
        ],
        "summary": "user register and relation supplier",
        "description": "user register with invite code",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "inviteCode",
            "in": "path",
            "description": "invite code base64",
            "required": true
          },
          {
            "name": "user",
            "in": "body",
            "description": "user info",
            "required": true,
            "schema": {
              "$ref": "#/definitions/user"
            }

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/ApiResponse"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid user id"
          }
        }
      }
    },
    "/admin/{adminId}/supplier/{supplier}/invite": {
      "post": {
        "tags": [
          "message"
        ],
        "summary": "admin send a invite email",
        "description": "invite supplier",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "adminId",
            "in": "path",
            "description": "admin id",
            "required": true
          },
          {
            "name": "supplierId",
            "in": "path",
            "description": "supplier id",
            "required": true
          },
          {
            "name": "user",
            "in": "body",
            "description": "user info",
            "required": true,
            "schema": {
              "$ref": "#/definitions/user"
            }

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/ApiResponse"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid user id"
          }
        }
      }
    }
  },
  "securityDefinitions": {
    "petstore_auth": {
      "type": "oauth2",
      "authorizationUrl": "http://oauth.myxxjs.com/api",
      "flow": "implicit",
      "scopes": {
        "write:pets": "modify pets in your account",
        "read:pets": "read your pets"
      }
    },
    "api_key": {
      "type": "apiKey",
      "name": "api_key",
      "in": "header"
    }
  },
  "definitions": {
    "user": {
      "type": "object",
      "properties": {

        "username": {
          "type": "string"
        },
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        },
        "gender": {
          "type": "integer"
        },
        "type": {
          "type": "integer"
        }
      },
      "xml": {
        "name": "user"
      }
    },
    "admin": {
      "type": "object",
      "required": [
        "id",
        "username",
        "password"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "username": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        },
        "remark": {
          "type": "string"
        },
        "admin_status": {
          "type": "integer",
          "description": "admin status",
          "enum": [
            "0",
            "1"
          ]
        }
      },
      "xml": {
        "name": "admin"
      }
    },
    "password": {
      "type": "object",
      "required": [
        "originPassword",
        "newPassword"
      ],
      "properties": {
        "originPassword": {
          "type": "string"
        },
        "newPassword": {
          "type": "string"
        }
      },
      "xml": {
        "name": "password"
      }
    },
    "imageMetaData": {
      "type": "object",
      "required": [
        "type"
      ],
      "properties": {
        "type": {
          "type": "integer"
        }
      },
      "xml": {
        "name": "imageMetaData"
      }
    },
    "feedback": {
      "type": "object",
      "required": [
        "email",
        "name",
        "content"
      ],
      "properties": {
        "email": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "content": {
          "type": "string"
        }
      },
      "xml": {
        "name": "feedback"
      }
    },
    "brand": {
      "type": "object",
      "required": [
        "brandCn",
        "brandEn",
        "producerId"
      ],
      "properties": {
        "brandCn": {
          "type": "string"
        },
        "brandEn": {
          "type": "string"
        },
        "producerId": {
          "type": "integer"
        },
        "image": {
          "type": "string"
        },
        "remark": {
          "type": "string"
        }
      },
      "xml": {
        "name": "brand"
      }
    },
    "producer": {
      "type": "object",
      "required": [
        "nameCn",
        "nameEn"
      ],
      "properties": {
        "nameCn": {
          "type": "string"
        },
        "nameEn": {
          "type": "string"
        },
        "image": {
          "type": "string"
        },
        "remark": {
          "type": "string"
        }
      },
      "xml": {
        "name": "producer"
      }
    },
    "auto": {
      "type": "object",
      "required": [
        "nameCn",
        "nameEn",
        "brandId"
      ],
      "properties": {
        "nameCn": {
          "type": "string"
        },
        "nameEn": {
          "type": "string"
        },
        "brandId": {
          "type": "integer"
        },
        "image": {
          "type": "string"
        },
        "remark": {
          "type": "string"
        }
      },
      "xml": {
        "name": "auto"
      }
    },
    "autoExtra": {
      "type": "object",
      "required": [
        "autoId",
        "year",
        "vol",
        "item",
        "type"
      ],
      "properties": {
        "autoId": {
          "type": "integer"
        },
        "year": {
          "type": "integer"
        },
        "vol": {
          "type": "float"
        },
        "item": {
          "type": "string"
        },
        "type": {
          "type": "integer"
        }
      },
      "xml": {
        "name": "autoExtra"
      }
    },
    "procure": {
      "type": "object",
      "required": [
        "autoId",
        "nameCn",
        "nameEn",
        "brandId",
        "brandCn",
        "brandEn",
        "qty"
      ],
      "properties": {
        "autoId": {
          "type": "integer"
        },
        "brandId": {
          "type": "integer"
        },
        "nameCn": {
          "type": "string"
        },
        "nameEn": {
          "type": "string"
        },
        "brandCn": {
          "type": "string"
        },
        "brandCn": {
          "type": "string"
        },
        "img": {
          "type": "string"
        },
        "extraId": {
          "type": "integer"
        },
        "extraVol": {
          "type": "float"
        },
        "extraItem": {
          "type": "string"
        },
        "extraType": {
          "type": "integer"
        },
        "extraYear": {
          "type": "integer"
        },
        "qty": {
          "type": "integer"
        },
        "remark": {
          "type": "string"
        },
        "end": {
          "type": "string",
          "format": "date-time"
        }
      },
      "xml": {
        "name": "procure"
      }
    },
    "offer": {
      "type": "object",
      "required": [
        "userId",
        "procureId",
        "supplierId",
        "price",
        "qty"
      ],
      "properties": {
        "userId": {
          "type": "integer"
        },
        "procureId": {
          "type": "integer"
        },
        "supplierId": {
          "type": "integer"
        },
        "price": {
          "type": "float"
        },
        "qty": {
          "type": "integer"
        },
        "tax": {
          "type": "float"
        }
      },
      "xml": {
        "name": "offer"
      }
    },
    "offerStatus": {
      "type": "object",
      "required": [
        "actualPrice",
        "actualQty",
        "status"
      ],
      "properties": {
        "offerId": {
          "type": "integer"
        },
        "procureId": {
          "type": "integer"
        },
        "supplierId": {
          "type": "integer"
        },
        "userId": {
          "type": "integer"
        },
        "actualPrice": {
          "type": "float"
        },
        "actualQty": {
          "type": "integer"
        },
        "status": {
          "type": "integer"
        }
      },
      "xml": {
        "name": "offerStatus"
      }
    },
    "supplier": {
      "type": "object",
      "required": [
        "bizName",
        "contact",
        "email"
      ],
      "properties": {
        "bizName": {
          "type": "string"
        },
        "contact": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        },
        "fax": {
          "type": "string"
        },
        "zipcode": {
          "type": "integer"
        },
        "state": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "address": {
          "type": "string"
        },
        "website": {
          "type": "string"
        },
        "remark": {
          "type": "string"
        }
      },
      "xml": {
        "name": "offerStatus"
      }
    },
    "ApiResponse": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean"
        },
        "result": {
          "type": "object"
        },
        "msg": {
          "type": "string"
        }
      }
    }
  },
  "externalDocs": {
    "description": "Find more on developer website",
    "url": "http://myxxjs.com"
  }
}